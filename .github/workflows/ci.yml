name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  nix-build-and-test:
    name: Build and Test with Nix
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v29
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          
    - name: Setup Nix cache
      uses: cachix/cachix-action@v15
      with:
        name: devenv
        
    - name: Check flake
      run: nix flake check
      
    - name: Build workspace
      run: nix develop --command cargo build --all
      
    - name: Run clippy
      run: nix develop --command cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Check formatting
      run: nix develop --command cargo fmt --all -- --check
      
    - name: Run tests
      run: nix develop --command cargo test --all
      
    - name: Run integration tests
      run: nix develop --command cargo test --all -- --include-ignored

  cargo-check:
    name: Cargo Check (without Nix)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler pkg-config libssl-dev
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Check code
      run: cargo check --all
      
    - name: Basic build
      run: cargo build --all

  test-proto-downloader:
    name: Test Proto Downloader Tool
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v28
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          
    - name: Setup Nix cache
      uses: cachix/cachix-action@v15
      with:
        name: devenv
        
    - name: Test proto-downloader
      run: |
        cd crates/regen-types/tools/proto-downloader
        nix develop --command cargo test --all -- --include-ignored

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Run security audit
      run: cargo audit